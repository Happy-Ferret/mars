From d30316ed68259450315665ac3d63c6ea7af4f1b3 Mon Sep 17 00:00:00 2001
From: Thomas Schoebel-Theuer <schoebel@bell.site>
Date: Wed, 26 Jun 2013 14:45:07 +0200
Subject: [PATCH] mars: pre-patch for mars

Mostly introduces missing EXPORT_SYMBOL().
Should have exactly zero impact onto the kernel.
---
 fs/aio.c              | 5 +++++
 fs/namei.c            | 5 +++++
 fs/open.c             | 2 ++
 fs/utimes.c           | 2 ++
 include/linux/major.h | 1 +
 mm/page_alloc.c       | 2 ++
 mm/swap_state.c       | 1 +
 7 files changed, 18 insertions(+)

diff --git a/fs/aio.c b/fs/aio.c
index 78c514c..bbe4cce 100644
--- a/fs/aio.c
+++ b/fs/aio.c
@@ -1339,6 +1339,7 @@ SYSCALL_DEFINE2(io_setup, unsigned, nr_events, aio_context_t __user *, ctxp)
 out:
 	return ret;
 }
+EXPORT_SYMBOL(sys_io_setup);
 
 /* sys_io_destroy:
  *	Destroy the aio_context specified.  May cancel any outstanding 
@@ -1356,6 +1357,7 @@ SYSCALL_DEFINE1(io_destroy, aio_context_t, ctx)
 	pr_debug("EINVAL: io_destroy: invalid context id\n");
 	return -EINVAL;
 }
+EXPORT_SYMBOL(sys_io_destroy);
 
 static void aio_advance_iovec(struct kiocb *iocb, ssize_t ret)
 {
@@ -1746,6 +1748,7 @@ long do_io_submit(aio_context_t ctx_id, long nr,
 	put_ioctx(ctx);
 	return i ? i : ret;
 }
+EXPORT_SYMBOL(sys_io_submit);
 
 /* sys_io_submit:
  *	Queue the nr iocbs pointed to by iocbpp for processing.  Returns
@@ -1843,6 +1846,7 @@ SYSCALL_DEFINE3(io_cancel, aio_context_t, ctx_id, struct iocb __user *, iocb,
 
 	return ret;
 }
+EXPORT_SYMBOL(sys_io_cancel);
 
 /* io_getevents:
  *	Attempts to read at least min_nr events and up to nr events from
@@ -1875,3 +1879,4 @@ SYSCALL_DEFINE5(io_getevents, aio_context_t, ctx_id,
 	asmlinkage_protect(5, ret, ctx_id, min_nr, nr, events, timeout);
 	return ret;
 }
+EXPORT_SYMBOL(sys_io_getevents);
diff --git a/fs/namei.c b/fs/namei.c
index 5008f01..90d2b81 100644
--- a/fs/namei.c
+++ b/fs/namei.c
@@ -3397,12 +3397,17 @@ EXPORT_SYMBOL(vfs_create);
 EXPORT_SYMBOL(vfs_follow_link);
 EXPORT_SYMBOL(vfs_link);
 EXPORT_SYMBOL(vfs_mkdir);
+EXPORT_SYMBOL(sys_mkdir);
 EXPORT_SYMBOL(vfs_mknod);
 EXPORT_SYMBOL(generic_permission);
 EXPORT_SYMBOL(vfs_readlink);
 EXPORT_SYMBOL(vfs_rename);
+EXPORT_SYMBOL(sys_rename);
 EXPORT_SYMBOL(vfs_rmdir);
+EXPORT_SYMBOL(sys_rmdir);
 EXPORT_SYMBOL(vfs_symlink);
+EXPORT_SYMBOL(sys_symlink);
 EXPORT_SYMBOL(vfs_unlink);
+EXPORT_SYMBOL(sys_unlink);
 EXPORT_SYMBOL(dentry_unhash);
 EXPORT_SYMBOL(generic_readlink);
diff --git a/fs/open.c b/fs/open.c
index 22c41b5..e5e14c0 100644
--- a/fs/open.c
+++ b/fs/open.c
@@ -545,6 +545,7 @@ out_release:
 out:
 	return error;
 }
+EXPORT_SYMBOL(sys_chmod);
 
 SYSCALL_DEFINE5(fchownat, int, dfd, const char __user *, filename, uid_t, user,
 		gid_t, group, int, flag)
@@ -591,6 +592,7 @@ out_release:
 out:
 	return error;
 }
+EXPORT_SYMBOL(sys_lchown);
 
 SYSCALL_DEFINE3(fchown, unsigned int, fd, uid_t, user, gid_t, group)
 {
diff --git a/fs/utimes.c b/fs/utimes.c
index ba653f3..f021ea4 100644
--- a/fs/utimes.c
+++ b/fs/utimes.c
@@ -1,3 +1,4 @@
+#include <linux/module.h>
 #include <linux/compiler.h>
 #include <linux/file.h>
 #include <linux/fs.h>
@@ -170,6 +171,7 @@ long do_utimes(int dfd, const char __user *filename, struct timespec *times,
 out:
 	return error;
 }
+EXPORT_SYMBOL(do_utimes);
 
 SYSCALL_DEFINE4(utimensat, int, dfd, const char __user *, filename,
 		struct timespec __user *, utimes, int, flags)
diff --git a/include/linux/major.h b/include/linux/major.h
index 6a8ca98..faf6692 100644
--- a/include/linux/major.h
+++ b/include/linux/major.h
@@ -146,6 +146,7 @@
 #define UNIX98_PTY_SLAVE_MAJOR	(UNIX98_PTY_MASTER_MAJOR+UNIX98_PTY_MAJOR_COUNT)
 
 #define DRBD_MAJOR		147
+#define MARS_MAJOR		148
 #define RTF_MAJOR		150
 #define RAW_MAJOR		162
 
diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 2b8ba3a..2ba0c27 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -176,6 +176,7 @@ static char * const zone_names[MAX_NR_ZONES] = {
 };
 
 int min_free_kbytes = 1024;
+EXPORT_SYMBOL(min_free_kbytes);
 
 static unsigned long __meminitdata nr_kernel_pages;
 static unsigned long __meminitdata nr_all_pages;
@@ -5187,6 +5188,7 @@ void setup_per_zone_wmarks(void)
 	/* update totalreserve_pages */
 	calculate_totalreserve_pages();
 }
+EXPORT_SYMBOL(setup_per_zone_wmarks);
 
 /*
  * The inactive anon list should be small enough that the VM never has to
diff --git a/mm/swap_state.c b/mm/swap_state.c
index 78cc4d1..36e4ee4 100644
--- a/mm/swap_state.c
+++ b/mm/swap_state.c
@@ -43,6 +43,7 @@ struct address_space swapper_space = {
 	.i_mmap_nonlinear = LIST_HEAD_INIT(swapper_space.i_mmap_nonlinear),
 	.backing_dev_info = &swap_backing_dev_info,
 };
+EXPORT_SYMBOL(swapper_space);
 
 #define INC_CACHE_INFO(x)	do { swap_cache_info.x++; } while (0)
 
-- 
1.8.1.4

